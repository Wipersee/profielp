version: '3.8'

services:
  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=profielb_db
    networks:
      - main
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  app:
    build: .
    env_file:
      - ./.dev.env #rewrite to prod.env
    command: sh -c "wait-for postgres:5432 && python manage.py collectstatic --no-input && python manage.py migrate && gunicorn --workers=2 --timeout 400 dashboard.wsgi -b 0.0.0.0:8000"
    container_name: app
    depends_on:
      - postgres
    expose:
      - "8000"
    ports:
      - "8000:8000"
    hostname: app
    image: app-image
    networks:
      - main
    restart: on-failure

networks:
  main:
    driver: bridge

volumes:
  postgresql-data:
